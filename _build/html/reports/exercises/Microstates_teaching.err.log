Traceback (most recent call last):
  File "/Users/tivadarr/anaconda3/envs/microstates/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/tivadarr/anaconda3/envs/microstates/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tivadarr/anaconda3/envs/microstates/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/tivadarr/anaconda3/envs/microstates/lib/python3.12/asyncio/base_events.py", line 685, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/tivadarr/anaconda3/envs/microstates/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/tivadarr/anaconda3/envs/microstates/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/tivadarr/anaconda3/envs/microstates/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
%matplotlib inline
n_optimal, scores = nk.microstates_findnumber(ModK_g_EO._fitted_data, n_max = 8, sampling_rate=raw.info['sfreq'], show=True)
print("Optimal number of microstates: ", n_optimal)
------------------

----- stdout -----
[........................................] 0/7
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mLinAlgError[0m                               Traceback (most recent call last)
Cell [0;32mIn[19], line 2[0m
[1;32m      1[0m get_ipython()[38;5;241m.[39mrun_line_magic([38;5;124m'[39m[38;5;124mmatplotlib[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124minline[39m[38;5;124m'[39m)
[0;32m----> 2[0m n_optimal, scores [38;5;241m=[39m [43mnk[49m[38;5;241;43m.[39;49m[43mmicrostates_findnumber[49m[43m([49m[43mModK_g_EO[49m[38;5;241;43m.[39;49m[43m_fitted_data[49m[43m,[49m[43m [49m[43mn_max[49m[43m [49m[38;5;241;43m=[39;49m[43m [49m[38;5;241;43m8[39;49m[43m,[49m[43m [49m[43msampling_rate[49m[38;5;241;43m=[39;49m[43mraw[49m[38;5;241;43m.[39;49m[43minfo[49m[43m[[49m[38;5;124;43m'[39;49m[38;5;124;43msfreq[39;49m[38;5;124;43m'[39;49m[43m][49m[43m,[49m[43m [49m[43mshow[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m
[1;32m      3[0m [38;5;28mprint[39m([38;5;124m"[39m[38;5;124mOptimal number of microstates: [39m[38;5;124m"[39m, n_optimal)

File [0;32m~/anaconda3/envs/microstates/lib/python3.12/site-packages/neurokit2/microstates/microstates_findnumber.py:83[0m, in [0;36mmicrostates_findnumber[0;34m(eeg, n_max, method, clustering_method, show, verbose, **kwargs)[0m
[1;32m     80[0m results [38;5;241m=[39m []
[1;32m     81[0m [38;5;28;01mfor[39;00m idx, n_microstates [38;5;129;01min[39;00m progress_bar([38;5;28mrange[39m([38;5;241m2[39m, n_max [38;5;241m+[39m [38;5;241m1[39m), verbose[38;5;241m=[39mverbose):
[0;32m---> 83[0m     out [38;5;241m=[39m [43mmicrostates_segment[49m[43m([49m
[1;32m     84[0m [43m        [49m[43meeg[49m[43m,[49m[43m [49m[43mn_microstates[49m[38;5;241;43m=[39;49m[43mn_microstates[49m[43m,[49m[43m [49m[43mmethod[49m[38;5;241;43m=[39;49m[43mclustering_method[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m
[1;32m     85[0m [43m    [49m[43m)[49m
[1;32m     87[0m     segmentation [38;5;241m=[39m out[[38;5;124m"[39m[38;5;124mSequence[39m[38;5;124m"[39m]
[1;32m     88[0m     rez [38;5;241m=[39m {}

File [0;32m~/anaconda3/envs/microstates/lib/python3.12/site-packages/neurokit2/microstates/microstates_segment.py:256[0m, in [0;36mmicrostates_segment[0;34m(eeg, n_microstates, train, method, gfp_method, sampling_rate, standardize_eeg, n_runs, max_iterations, criterion, random_state, optimize, **kwargs)[0m
[1;32m    251[0m     segmentation, polarity, gev, gev_all [38;5;241m=[39m _microstates_segment_runsegmentation(
[1;32m    252[0m         data, microstates, gfp, n_microstates[38;5;241m=[39mn_microstates
[1;32m    253[0m     )
[1;32m    255[0m [38;5;66;03m# Reorder[39;00m
[0;32m--> 256[0m segmentation, microstates [38;5;241m=[39m [43mmicrostates_classify[49m[43m([49m[43msegmentation[49m[43m,[49m[43m [49m[43mmicrostates[49m[43m)[49m
[1;32m    258[0m [38;5;66;03m# CLustering quality[39;00m
[1;32m    259[0m [38;5;66;03m#    quality = cluster_quality(data, segmentation, clusters=microstates, info=info, n_random=10, sd=gfp)[39;00m
[1;32m    260[0m 
[1;32m    261[0m [38;5;66;03m# Output[39;00m
[1;32m    262[0m info [38;5;241m=[39m {
[1;32m    263[0m     [38;5;124m"[39m[38;5;124mMicrostates[39m[38;5;124m"[39m: microstates,
[1;32m    264[0m     [38;5;124m"[39m[38;5;124mSequence[39m[38;5;124m"[39m: segmentation,
[0;32m   (...)[0m
[1;32m    270[0m     [38;5;124m"[39m[38;5;124mInfo[39m[38;5;124m"[39m: info_mne,
[1;32m    271[0m }

File [0;32m~/anaconda3/envs/microstates/lib/python3.12/site-packages/neurokit2/microstates/microstates_classify.py:46[0m, in [0;36mmicrostates_classify[0;34m(segmentation, microstates)[0m
[1;32m      8[0m [38;5;250m[39m[38;5;124;03m"""**Reorder (sort) the microstates (experimental)**[39;00m
[1;32m      9[0m 
[1;32m     10[0m [38;5;124;03mReorder (sort) the microstates (experimental) based on the pattern of values in the vector of[39;00m
[0;32m   (...)[0m
[1;32m     43[0m 
[1;32m     44[0m [38;5;124;03m"""[39;00m
[1;32m     45[0m [38;5;66;03m# Reorder[39;00m
[0;32m---> 46[0m new_order [38;5;241m=[39m [43m_microstates_sort[49m[43m([49m[43mmicrostates[49m[43m)[49m
[1;32m     47[0m microstates [38;5;241m=[39m microstates[new_order]
[1;32m     49[0m replacement [38;5;241m=[39m [38;5;28mdict[39m([38;5;28menumerate[39m(new_order))

File [0;32m~/anaconda3/envs/microstates/lib/python3.12/site-packages/neurokit2/microstates/microstates_classify.py:68[0m, in [0;36m_microstates_sort[0;34m(microstates)[0m
[1;32m     66[0m [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m order_original:
[1;32m     67[0m     state [38;5;241m=[39m microstates[i, :]
[0;32m---> 68[0m     _, coefs_linear[i], coefs_quadratic[i] [38;5;241m=[39m [43mnp[49m[38;5;241;43m.[39;49m[43mpolyfit[49m[43m([49m
[1;32m     69[0m [43m        [49m[43mstate[49m[43m,[49m[43m [49m[43mnp[49m[38;5;241;43m.[39;49m[43marange[49m[43m([49m[38;5;28;43mlen[39;49m[43m([49m[43mstate[49m[43m)[49m[43m)[49m[43m,[49m[43m [49m[38;5;241;43m2[39;49m
[1;32m     70[0m [43m    [49m[43m)[49m
[1;32m     72[0m [38;5;66;03m# For each state, which is the biggest trend, linear or quadratic[39;00m
[1;32m     73[0m order_quad [38;5;241m=[39m order_original[np[38;5;241m.[39mabs(coefs_linear) [38;5;241m<[39m[38;5;241m=[39m np[38;5;241m.[39mabs(coefs_quadratic)]

File [0;32m~/anaconda3/envs/microstates/lib/python3.12/site-packages/numpy/lib/polynomial.py:669[0m, in [0;36mpolyfit[0;34m(x, y, deg, rcond, full, w, cov)[0m
[1;32m    667[0m scale [38;5;241m=[39m NX[38;5;241m.[39msqrt((lhs[38;5;241m*[39mlhs)[38;5;241m.[39msum(axis[38;5;241m=[39m[38;5;241m0[39m))
[1;32m    668[0m lhs [38;5;241m/[39m[38;5;241m=[39m scale
[0;32m--> 669[0m c, resids, rank, s [38;5;241m=[39m [43mlstsq[49m[43m([49m[43mlhs[49m[43m,[49m[43m [49m[43mrhs[49m[43m,[49m[43m [49m[43mrcond[49m[43m)[49m
[1;32m    670[0m c [38;5;241m=[39m (c[38;5;241m.[39mT[38;5;241m/[39mscale)[38;5;241m.[39mT  [38;5;66;03m# broadcast scale coefficients[39;00m
[1;32m    672[0m [38;5;66;03m# warn on rank reduction, which indicates an ill conditioned matrix[39;00m

File [0;32m~/anaconda3/envs/microstates/lib/python3.12/site-packages/numpy/linalg/linalg.py:2326[0m, in [0;36mlstsq[0;34m(a, b, rcond)[0m
[1;32m   2323[0m [38;5;28;01mif[39;00m n_rhs [38;5;241m==[39m [38;5;241m0[39m:
[1;32m   2324[0m     [38;5;66;03m# lapack can't handle n_rhs = 0 - so allocate the array one larger in that axis[39;00m
[1;32m   2325[0m     b [38;5;241m=[39m zeros(b[38;5;241m.[39mshape[:[38;5;241m-[39m[38;5;241m2[39m] [38;5;241m+[39m (m, n_rhs [38;5;241m+[39m [38;5;241m1[39m), dtype[38;5;241m=[39mb[38;5;241m.[39mdtype)
[0;32m-> 2326[0m x, resids, rank, s [38;5;241m=[39m [43mgufunc[49m[43m([49m[43ma[49m[43m,[49m[43m [49m[43mb[49m[43m,[49m[43m [49m[43mrcond[49m[43m,[49m[43m [49m[43msignature[49m[38;5;241;43m=[39;49m[43msignature[49m[43m,[49m[43m [49m[43mextobj[49m[38;5;241;43m=[39;49m[43mextobj[49m[43m)[49m
[1;32m   2327[0m [38;5;28;01mif[39;00m m [38;5;241m==[39m [38;5;241m0[39m:
[1;32m   2328[0m     x[[38;5;241m.[39m[38;5;241m.[39m[38;5;241m.[39m] [38;5;241m=[39m [38;5;241m0[39m

File [0;32m~/anaconda3/envs/microstates/lib/python3.12/site-packages/numpy/linalg/linalg.py:124[0m, in [0;36m_raise_linalgerror_lstsq[0;34m(err, flag)[0m
[1;32m    123[0m [38;5;28;01mdef[39;00m [38;5;21m_raise_linalgerror_lstsq[39m(err, flag):
[0;32m--> 124[0m     [38;5;28;01mraise[39;00m LinAlgError([38;5;124m"[39m[38;5;124mSVD did not converge in Linear Least Squares[39m[38;5;124m"[39m)

[0;31mLinAlgError[0m: SVD did not converge in Linear Least Squares

